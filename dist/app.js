!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function l(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,l)}s((r=r.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function l(a){return function(l){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(o=i.trys,(o=o.length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,l])}}},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=a(n(1));r(void 0,void 0,void 0,(function(){function e(){for(var e=l.value,t=0;t<a.length;t++){var n=a[t].getElementsByTagName("td")[0];n&&((n.textContent||n.innerText)===e?a[t].classList.remove("selected"):a[t].classList.add("selected"),""===e&&a[t].classList.remove("selected"))}}function t(){for(var e=s.value.toLowerCase(),t=0;t<a.length;t++){var n=a[t].getElementsByTagName("td")[1];n&&((n.textContent||n.innerText).toLowerCase().indexOf(e)>-1?a[t].classList.remove("typed"):a[t].classList.add("typed"))}}var n,r,a,l,s,u,c,d;return o(this,(function(o){switch(o.label){case 0:return o.trys.push([0,2,,3]),[4,i.default("https://jsonplaceholder.typicode.com/todos","get")];case 1:return(n=o.sent())&&(document.getElementById("loading").style.display="none",function(e){for(var t="<tr> \n        <th>User ID</th> \n        <th>Task</th> \n        <th>Completed</th>\n       </tr>",n=0,r=e;n<r.length;n++){var o=r[n];t+="<tr>  \n      <td>"+o.userId+"</td> \n      <td>"+o.title+"</td> \n      <td>"+o.completed+"</td>        \n      </tr>"}document.getElementById("tasks").innerHTML=t}(n.parsedBody)),[3,3];case 2:return o.sent(),document.getElementById("loading").innerHTML="<h1>No data available</h1>",[3,3];case 3:return r=document.getElementById("tasks"),a=Array.from(r.tBodies[0].rows),(l=document.getElementById("select")).addEventListener("change",e),(s=document.getElementById("search-input")).addEventListener("keyup",t),u=document.getElementById("trueButton"),c=document.getElementById("falseButton"),u.addEventListener("click",(function(){d("true"),u.classList.toggle("clicked")})),c.addEventListener("click",(function(){d("false"),c.classList.toggle("clicked")})),d=function(e){for(var t=0;t<a.length;t++){var n=a[t].getElementsByTagName("td")[2];n&&(n.innerText===e?a[t].classList.toggle("toggled"):a[t].classList.toggle("untoggled"))}},window.onbeforeunload=function(){window.scrollTo(0,0)},window.onscroll=function(){window.scrollY>=60||window.pageYOffset>=60?(document.getElementById("header").classList.add("inverted"),document.querySelector("#header h1").classList.add("inverted")):(document.getElementById("header").classList.remove("inverted"),document.querySelector("#header h1").classList.remove("inverted"))},[2]}}))}))},function(e,t,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},o=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,a){function i(e){try{s(r.next(e))}catch(e){a(e)}}function l(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,l)}s((r=r.apply(e,t||[])).next())}))},a=this&&this.__generator||function(e,t){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function l(a){return function(l){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(o=i.trys,(o=o.length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,l])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){return void 0===t&&(t="get"),void 0===n&&(n={"Access-Control-Allow-Origin":"*","Content-Type":"application/json"}),o(void 0,void 0,void 0,(function(){var o,i,l;return a(this,(function(a){switch(a.label){case 0:return o=new AbortController,[4,fetch(""+e,{signal:o.signal,method:t.toUpperCase(),headers:r({},n)})];case 1:i=a.sent(),a.label=2;case 2:return a.trys.push([2,4,,5]),l=i,[4,i.json()];case 3:return l.parsedBody=a.sent(),[3,5];case 4:return a.sent(),[3,5];case 5:if(!i.ok)throw new Error(i.statusText);return[2,i]}}))}))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,